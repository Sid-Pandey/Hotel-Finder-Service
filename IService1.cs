/*
Please find below the code for ELECTIVE Services. Two elective services have been developed. 

1. Hotel Finder Service:
This service takes as its input a georgraphical location and returns the 5 nearest hotels to that location. 
Here, the REST API from Yelp has been used to find the hotels of interest. 

Function signature : public List<string> GetNearestHotels(string location)

2. Add to Cart and Payment Service:
This service takes as its input a dictionary which contains the following parameters. 
1. The name of the user.
2. His address
3. His debit/credit card number
4. The amount for which he wants to make a purchase. 

It then consults a file, bankdetails.text which stores the state information, more specifically, the balance associated with each 
card number. Here, the balances have been generated by a random number service in order to simulate a real world booking system 
where we get multiple users with different bank accounts and balances. 

For every user, 
 1. If that user does not exist, an entry for that user and his balance is created in the bankdetails.txt file.
 2. If the user exists, hs balance is updated by deducting the amount in the transaction, and the updated balance is 
written back to the file.

Function signature : public String AddToCartAndPayment(Dictionary<String, String> userdetails)
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Web;
using System.Text;

namespace ElectiveServices
{
    // NOTE: You can use the "Rename" command on the "Refactor" menu to change the interface name "IService1" in both code and config file together.
    [ServiceContract]
    public interface IService1
    {

        [OperationContract]
        List<string> GetNearestHotels(string location);

        [OperationContract]
        String AddToCartAndPayment(Dictionary<String, String> userdetails);
        // TODO: Add your service operations here
    }
}